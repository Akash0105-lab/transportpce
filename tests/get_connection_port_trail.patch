diff --git a/netconf/tools/netconf-testtool/src/main/java/org/opendaylight/netconf/test/tool/SimulatedOperationProvider.java b/netconf/tools/netconf-testtool/src/main/java/org/opendaylight/netconf/test/tool/SimulatedOperationProvider.java
index eeae4434..0fe027a3 100644
--- a/netconf/tools/netconf-testtool/src/main/java/org/opendaylight/netconf/test/tool/SimulatedOperationProvider.java
+++ b/netconf/tools/netconf-testtool/src/main/java/org/opendaylight/netconf/test/tool/SimulatedOperationProvider.java
@@ -26,6 +26,7 @@ import org.opendaylight.netconf.test.tool.rpc.SimulatedDiscardChanges;
 import org.opendaylight.netconf.test.tool.rpc.SimulatedEditConfig;
 import org.opendaylight.netconf.test.tool.rpc.SimulatedGet;
 import org.opendaylight.netconf.test.tool.rpc.SimulatedGetConfig;
+import org.opendaylight.netconf.test.tool.rpc.SimulatedGetConnectionPortTrail;
 import org.opendaylight.netconf.test.tool.rpc.SimulatedLock;
 import org.opendaylight.netconf.test.tool.rpc.SimulatedUnLock;
 
@@ -84,6 +85,8 @@ class SimulatedOperationProvider implements NetconfOperationServiceFactory {
             final SimulatedEditConfig sEditConfig = new SimulatedEditConfig(String.valueOf(currentSessionId), storage);
             final SimulatedGetConfig sGetConfig = new SimulatedGetConfig(
                 String.valueOf(currentSessionId), storage, initialConfigXMLFile);
+            final SimulatedGetConnectionPortTrail sSimulatedConnectionPortTrail = new SimulatedGetConnectionPortTrail(
+                String.valueOf(currentSessionId));
             final SimulatedCommit sCommit = new SimulatedCommit(String.valueOf(currentSessionId));
             final SimulatedLock sLock = new SimulatedLock(String.valueOf(currentSessionId));
             final SimulatedUnLock sUnlock = new SimulatedUnLock(String.valueOf(currentSessionId));
@@ -92,7 +95,8 @@ class SimulatedOperationProvider implements NetconfOperationServiceFactory {
             final SimulatedDiscardChanges sDiscardChanges = new SimulatedDiscardChanges(
                 String.valueOf(currentSessionId));
             return Sets.newHashSet(
-                sGet, sGetConfig, sEditConfig, sCommit, sLock, sUnlock, sCreateSubs, sDiscardChanges);
+                sGet, sGetConfig, sEditConfig, sCommit, sLock, sUnlock, sCreateSubs, sDiscardChanges,
+                sSimulatedConnectionPortTrail);
         }
 
         @Override
diff --git a/netconf/tools/netconf-testtool/src/main/java/org/opendaylight/netconf/test/tool/rpc/SimulatedGetConnectionPortTrail.java b/netconf/tools/netconf-testtool/src/main/java/org/opendaylight/netconf/test/tool/rpc/SimulatedGetConnectionPortTrail.java
new file mode 100644
index 00000000..664a66df
--- /dev/null
+++ b/netconf/tools/netconf-testtool/src/main/java/org/opendaylight/netconf/test/tool/rpc/SimulatedGetConnectionPortTrail.java
@@ -0,0 +1,46 @@
+/*
+ * Copyright (c) 2015 Cisco Systems, Inc. and others.  All rights reserved.
+ *
+ * This program and the accompanying materials are made available under the
+ * terms of the Eclipse Public License v1.0 which accompanies this distribution,
+ * and is available at http://www.eclipse.org/legal/epl-v10.html
+ */
+
+package org.opendaylight.netconf.test.tool.rpc;
+
+import org.opendaylight.controller.config.util.xml.DocumentedException;
+import org.opendaylight.controller.config.util.xml.XmlElement;
+import org.opendaylight.netconf.confignetconfconnector.operations.AbstractConfigNetconfOperation;
+import org.w3c.dom.Document;
+import org.w3c.dom.Element;
+
+public class SimulatedGetConnectionPortTrail extends AbstractConfigNetconfOperation {
+
+    public SimulatedGetConnectionPortTrail(final String netconfSessionIdForReporting) {
+        super(null, netconfSessionIdForReporting);
+    }
+
+    @Override
+    protected Element handleWithNoSubsequentOperations(final Document document,
+            final XmlElement operationElement) throws DocumentedException {
+        Element portname = document.createElement("port-name");
+        portname.appendChild(document.createTextNode("L1"));
+        Element circuitpackname = document.createElement("circuit-pack-name");
+        circuitpackname.appendChild(document.createTextNode("2/0"));
+        Element ports = document.createElement("ports");
+        ports.setAttribute("xmlns", "http://org/openroadm/device");
+        ports.appendChild(portname);
+        ports.appendChild(circuitpackname);
+        return ports;
+    }
+
+    @Override
+    protected String getOperationName() {
+        return "get-connection-port-trail";
+    }
+
+    @Override
+    protected String getOperationNamespace() {
+        return "http://org/openroadm/device";
+    }
+}
